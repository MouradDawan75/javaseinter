1- Généricité ----------------- Sérialisation
2- Reflection (introspection) ------------ (Voir SerialHelperGeneric - méthodes csv)
3- Api Time: Nouvelles classes permettant de manipuler les dates à partir de Java 8
4- Interface Fonctionnelle
5- Api Stream - Stream Parallel - Stream Sequentiel
6- Threads - ThreadPool
7- Rappels Concepts Objets:
    * Encapsulation
    * Gestion des dépendences entre les objets: Héritage -> Composition -> Association -> Relation
    ** Objectif: réduire au maximum les dépendences entre les objets
    * Polymorphisme -----------> important: car permet d'obtenir un code facile à étendre

 8- Bonnes pratiques:
    SOLID:
    - Single of responsability
    - Open/close:
    - Liskov Substitution
    - Interface Segregation
    - Dependency Inversion / Dependency Injection

 9- Tell don't ask: remplacer les appels des get/set par des méthodes métiers
 10- loi Demeter
            /*
            Loi Demeter:
            Une classe ne doit interagir qu'avec les classes amies.
            Une méthode définie dans une classe, ne peut utiliser:
            - que ses propres paramètres
            - que ses variables locales ou bien les attributs de la classe
             */